# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "thunderbolt" "uas" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ "r8169" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/cc546441-d95a-4fcc-9a52-473355be3f42";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-2421c2cb-de35-401d-83b9-079fac61ef7c".device = "/dev/disk/by-uuid/2421c2cb-de35-401d-83b9-079fac61ef7c";


  # Needed for clevis to work
  boot.initrd.systemd.enable = true;
  # Enable network for tang server communication during boot
  boot.initrd.clevis.useTang = true;
  # boot.initrd.network.enable = true;
  boot.initrd.systemd.network = {
    enable = true;
    networks."enp8s0" = {
      enable = true;
      name = "enp8s0";
      DHCP = "yes";
    };
  };
  # Enable clevis
  boot.initrd.clevis.enable = true;
  # Decrypt via tpm or tang server
  # boot.initrd.clevis.devices."luks-2421c2cb-de35-401d-83b9-079fac61ef7c".secretFile = ./tpm.jwe;
  boot.initrd.clevis.devices."luks-2421c2cb-de35-401d-83b9-079fac61ef7c".secretFile = ./tang.jwe;

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/EADC-E1D3";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp8s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
